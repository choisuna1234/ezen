

[1단원]

객체 지향 개념 - 
(1) 메세지: 객체의 행위를 표현 , 
(2) 캡슐화 : 연관된 데이터와 함수를 함께 묶어
외부와 경계를 만들고 필요한 인터페이스만을 밖으로 드러냄, 
(3) 다형성: 파생된 클래스와 관련되면서 또 다른 행위를 요구하는것
(4) 상속: 하나의 클래스가 다른 클래스로부터 메소드 물려받는 것

객체 지향 기법 - instance : 같은 클래스에 속한 각각의 객체를 의미


스텁 stub - 토막, 꽁초, 남은부분, 몽당연필..이라는뜻으로 더미 객체가 마치 
실제로 동작하는 것처럼 만들어놓은것

목업 - 디자인, 사용방법설명, 평가 등을 위해 실제 화면과 유사하게 
만든 정적인 형태의 모형

애자일 기법 중 '스크럼' - 복잡한 제품을 개발(배포)하고 유지하기 위한 프레임워크
(개발주기는 2~4주)
애자일 기법 중 '개발 방법론' - 문서화보단 실행되는 SW 중점임

UML 구성요소 (사물, 관계, 다이어그램)
UML 다이어그램 - (정적/구조적 : 클래스, 객체, 패키지, 복합구조, 배치)
                         (동적/행위적 : 유스케이스, 상태, 활동, 시퀀스(순차), 통신, 상호작용, 타이밍)
UML 관계 - 연관관계(Association Relationship) ,
                의존관계(Dependency Relationship) : 다른 사물에 영향을 주며 일반적으로
한 클래스가 다른 클래스를 오퍼레이션(객체가 제공하는 기능)의 매개변수로 사용하는 경우 나타남,
                실체화관계(Realization Relationship): 한 객체가 다른 객체에 의해 오퍼레이션을 수행하도록 지정,
                일반화관계(Generalization Relationship)

요구 분석 - 기능적 요구사항( 입력기능, 출력기능, 데이터베이스, 통신 기능),
                비기능적 요구사항(성능,보안,품질,안정,응답속도, 자원사용량, 사용자 인증, 권한부여)


아키텍처 설계과정 - 의사 결정 과정이면서 동시에 인지적인 과정
1) 설계 목표 설정 2) 시스템 타입 결정 3) 스타일 적용 및 커스터마이즈
4)서브시스템의 기능, 인터페이스 동작 작성 5) 아키텍처 설계 검토
아키텍처 설계 중 품질 속성 - 가용성, 변경용이성, 성능, 보안성, 사용편의성, 시험용의성


디자인 패턴 - 객체 지향 프로그래밍 설계를 할 때 자주 발생하는 문제들을
피하기 위해 사용되는 패턴
(1)생성: 추상팩토리, 빌더, 팩토리 메소드, 프로토타입, 싱글톤
(2)구조: 어댑터, 브릿지,컴포지트, 데코레이터, 퍼사드, 플라이웨잇, 프록시 

CASE의 원천 기술
구조적 기법, 프로토타이핑 기술, 정보 저장소 기술

럼바우 - 객체 지향 분석 기법
럼바우 객체지향 분석에서 사용하는 분석 활동 - 객체 모델링(객체 다이어그램), 동적 모델링(상태 다이어그램), 
                                                              기능 모델링(자료흐름도)

FEP(Front End Processor) - 데이터를 미리 처리해줘서 시간을 줄여주는 프로그램 또는 하드웨어

하둡(Hadoop) - 분산 환경에서 빅 데이터를 저장하고 처리할 수 있는 자바 기반의 오픈 소스 프레임 워크

트랜잭션 - 데이터 베이스의 상태를 변화시키기 해서 수행하는 작업의 단위 / sql 이용해서 접근하는거
항상 일관성이 있어야함. 

스키마 - 데이터 베이스 구조와 제약 조건에 관한 전반적인 명세를 기술

coad-Yourdon 방법 - erd 다이어그램 사용하여 객체의 행위를 데이터 모델링하는데 초점을 둔 방법


------------------------------------------------------------------------------------------------------------------------------------

[2단원]

Stack - LIFO / Top과 Bottom으로 이루어져있음

Queue - FIFO


힙정렬- 최악의 수행 시간 O(2n4) / 전 이진 트리를 이용한 정렬 방식
퀵정렬- 레코드의 많은 자료 이동을 없애고 하나의 파일을 부분적으로 나누어 가면서 정렬함

테스트 케이스 - 구현된 소프트웨어가 사용자의 요구사항을 정확하게 준수했는지를 확인하기 위해
설계된 명세서
테스트 케이스 자동 생성 도구를 이용하여 테스트 데이터를 찾아내는 방법은 
입력 도매인분석, 랜덤테스트, 자료흐름도가 있다.

강도(Stress) 테스트 - 시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트

빌드 자동화 도구 - ant maven gradle

패키징 - 모듈로 생성한 실행 파일들을 묶어 배포용 설치 파일을 만드는것.
소비자 중심으로 진행됨

클린 코드 작성원칙 - 한번에 한가지만 처리하고 클.메.함을 최소 단위로 분리 -> 단순성

알고리즘 설계 기법 - Divide and Conquer(분할 정복 알고리즘), Greedy(탐욕 알고리즘), 
Backtracking(모든 조합 시도 후 답 찾음)

블랙박스 - 테스트기법->동치 클래스 분해, 경계값 분석, 원인 결과 그래프
화이트박스 - 기초 경로 검사 

인수 테스트 - 알파,베타 테스트와 밀접


------------------------------------------------------------------------------------------------------------------------------------

[3단원]

DDL - CREATE, ALTER, DROP

CASECADE - DROP문에서 부모 테이블의 항목 값을 삭제할 경우 자동적으로
자식 테이블의 해당 레코드를 삭제함

DML - SELECT, INSERT, UPDATE, DELETE

DCL - COMMIT, ROLLBACK, GRANT, REVOKE

릴레이션 - DB테이블임

ERD 도형 표현 - 사각형(개체타입), 속성(타원), 관계타입(마름모), 연결(선), 

도메인 - 하나의 애트리뷰트가 가질 수 있는 원자들의 값들의 집합
즉각 갱신 기법 -로그(log)를 필요로 하는 회복 기법4

5정규형 - 후보키를 통하지 않은 조인 종속 제거해야 만족하는 정규형

병렬 데이터베이스 환경 중 수평 분할에서 활용되는 분할 기법이 아닌것 - 예측 분할

개념적 설계 단계 : 트렌젝션 모델링/ 독립적인 개념 스키마 모델링/ 개념 스키마 설계/ er다이어그램

튜플: 리스트와 동일하게 여러 객체를 모아서 담는다. 숫자, 문자, 객체, 배열, 튜플 안의 튜플 전부 가능하다. 
하지만 튜플 내의 값은 수정이 불가하다. 추가도, 삭제도 안 된다. 한번 만들어지면 끝까지 가지고 가야 된다. 
( )로 사용하고, ( )가 없어도 동일하게 사용 가능하다.

sql에서 view를 삭제할 때 사용하는 명령어는 DROP

트랜잭션 모델링은 저장 레코드 양식을 설계할때 고려사항이 아님

REVOKE문은 DCL임(data control language)

병행제어는 DB 일관성을 파괴하지 않도록 제어하는것 (시분할기법XXXX)

로킹 단위가 크면 병행성 수준이 낮아진다

관계 대수 = 절차적











분산 데이터 시스템 - 
쉘 - 
나선형 모델 - 

Inspection - 점검
Portability - 이식성: 다양한 하드웨어 환경에서도 쉽게 수정가능
Cardinality - 행
Degree - 열
